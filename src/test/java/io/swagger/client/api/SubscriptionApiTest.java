/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ActiveSubscriptionDTO;
import io.swagger.client.model.SubscriptionDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SubscriptionApi
 */
@Ignore
public class SubscriptionApiTest {

    private final SubscriptionApi api = new SubscriptionApi();

    /**
     * This method can be used to determine if hooks are supported.
     *
     * This method can be used to determine if hooks are supported.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void areHooksSupportedTest() throws ApiException {
        Boolean response = api.areHooksSupported();

        // TODO: test validations
    }
    /**
     * Returns all subscriptions
     *
     * Returns all subscriptions. Subscriptions are automatically removed if they do not work (ie. if 404 status is returned). To improve notification reliability one can use this method to check if subscription is still active and re-subscribe if necessary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAll4Test() throws ApiException {
        List<ActiveSubscriptionDTO> response = api.getAll4();

        // TODO: test validations
    }
    /**
     * Subscribe to event
     *
     * Subscribe to event. Returns subscription Id.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void subscribeTest() throws ApiException {
        SubscriptionDTO body = null;
        String response = api.subscribe(body);

        // TODO: test validations
    }
    /**
     * Unsubscribe from event
     *
     * Unsubscribe from job status changed event
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void unsubscribeTest() throws ApiException {
        String subscriptionId = null;
        api.unsubscribe(subscriptionId);

        // TODO: test validations
    }
}
