/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.PaymentDTO;
import io.swagger.client.model.ProviderInvoiceCreateDTO;
import io.swagger.client.model.ProviderInvoiceCreateResultDTO;
import io.swagger.client.model.ProviderInvoiceDTO;
import io.swagger.client.model.UrlResultDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VendorInvoicesApi
 */
@Ignore
public class VendorInvoicesApiTest {

    private final VendorInvoicesApi api = new VendorInvoicesApi();

    /**
     * Creates a new invoice.
     *
     * Creates a new invoice from jobs. Jobs are grouped by provider and currency, therefore multiple invoices can be created.If any of the jobs cannot be invoiced (ie. it is already invoiced) then an error is reported.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void create1Test() throws ApiException {
        ProviderInvoiceCreateDTO body = null;
        ProviderInvoiceCreateResultDTO response = api.create1(body);

        // TODO: test validations
    }
    /**
     * Creates a new payment on the vendor account and assigns the payment to the invoice.
     *
     * Creates a new payment on the vendor account and assigns the payment to the invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createPaymentTest() throws ApiException {
        PaymentDTO body = null;
        Long invoiceId = null;
        api.createPayment(body, invoiceId);

        // TODO: test validations
    }
    /**
     * Removes a provider invoice.
     *
     * Removes a provider invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void delete2Test() throws ApiException {
        Long invoiceId = null;
        api.delete2(invoiceId);

        // TODO: test validations
    }
    /**
     * Removes a provider payment.
     *
     * Removes a provider payment.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void delete2_0Test() throws ApiException {
        Long paymentId = null;
        api.delete2_0(paymentId);

        // TODO: test validations
    }
    /**
     * Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
     *
     * Lists all vendor invoices in all statuses (including not ready and drafts) that have been updated since a specific date.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAll2Test() throws ApiException {
        Long updatedSince = null;
        List<ProviderInvoiceDTO> response = api.getAll2(updatedSince);

        // TODO: test validations
    }
    /**
     * Returns vendor invoices&#x27; internal identifiers.
     *
     * Returns vendor invoices&#x27; internal identifiers.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllIds3Test() throws ApiException {
        Long updatedSince = null;
        List<Integer> response = api.getAllIds3(updatedSince);

        // TODO: test validations
    }
    /**
     * Returns provider invoice details.
     *
     * Returns provider invoice details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getById3Test() throws ApiException {
        Long invoiceId = null;
        ProviderInvoiceDTO response = api.getById3(invoiceId);

        // TODO: test validations
    }
    /**
     * Generates provider invoice document (PDF).
     *
     * Generates provider invoice document (PDF).
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDocument1Test() throws ApiException {
        Long invoiceId = null;
        UrlResultDTO response = api.getDocument1(invoiceId);

        // TODO: test validations
    }
    /**
     * Returns all payments for the vendor invoice.
     *
     * Returns all payments for the vendor invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getPayments1Test() throws ApiException {
        Long invoiceId = null;
        List<PaymentDTO> response = api.getPayments1(invoiceId);

        // TODO: test validations
    }
    /**
     * Sends a provider invoice.
     *
     * Sends a provider invoice.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void sendTest() throws ApiException {
        Long invoiceId = null;
        api.send(invoiceId);

        // TODO: test validations
    }
    /**
     * Changes invoice status to given status.
     *
     * Changes invoice status to given status.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setStatusTest() throws ApiException {
        ProviderInvoiceCreateResultDTO body = null;
        Long invoiceId = null;
        api.setStatus(body, invoiceId);

        // TODO: test validations
    }
}
