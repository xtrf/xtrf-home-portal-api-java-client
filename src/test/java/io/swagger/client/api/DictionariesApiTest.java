/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.DictionaryEntity;
import io.swagger.client.model.ManyValuesPerTypeDTO;
import io.swagger.client.model.ServiceDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DictionariesApi
 */
@Ignore
public class DictionariesApiTest {

    private final DictionariesApi api = new DictionariesApi();

    /**
     * Returns active dictionary entities for all types.
     *
     * Returns active dictionary entities for all types.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActiveTest() throws ApiException {
        ManyValuesPerTypeDTO response = api.getActive();

        // TODO: test validations
    }
    /**
     * Returns active values from a given dictionary.
     *
     * Returns active values from a given dictionary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getActiveByTypeTest() throws ApiException {
        String type = null;
        String nameEquals = null;
        DictionaryEntity response = api.getActiveByType(type, nameEquals);

        // TODO: test validations
    }
    /**
     * Returns dictionary entities for all types. Both active and not active ones.
     *
     * &lt;div&gt;   &lt;p&gt;     XTRF holds many user-defined dictionaries (ie. countries).     Each dictionary contains a set of values (ie. Poland or Germany).     A default value may be defined for a dictionary.   &lt;/p&gt;   &lt;p&gt;     Dictionary values are identified using internal identifier which is constant and unique among other values from the same dictionary.     Please note that name used in dictionary values is presented in the locale of the current identity.     The same dictionary value can have different names, ie. \&quot;Poland\&quot; for one user, \&quot;Polska\&quot; for another one.   &lt;p&gt;   &lt;p&gt;     Possible dictionary types:     &lt;ul&gt;       &lt;li&gt;category&lt;/li&gt;       &lt;li&gt;country&lt;/li&gt;       &lt;li&gt;currency&lt;/li&gt;       &lt;li&gt;industry&lt;/li&gt;       &lt;li&gt;language&lt;/li&gt;       &lt;li&gt;leadSource&lt;/li&gt;       &lt;li&gt;personDepartment&lt;/li&gt;       &lt;li&gt;personPosition&lt;/li&gt;       &lt;li&gt;province&lt;/li&gt;       &lt;li&gt;specialization&lt;/li&gt;     &lt;/ul&gt;   &lt;/p&gt; &lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAll1Test() throws ApiException {
        ManyValuesPerTypeDTO response = api.getAll1();

        // TODO: test validations
    }
    /**
     * Returns services list
     *
     * Returns workflows list. Both active and not active ones.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAll3Test() throws ApiException {
        String nameEquals = null;
        ServiceDTO response = api.getAll3(nameEquals);

        // TODO: test validations
    }
    /**
     * Returns active services list
     *
     * Returns active workflows list
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllActiveTest() throws ApiException {
        String nameEquals = null;
        ServiceDTO response = api.getAllActive(nameEquals);

        // TODO: test validations
    }
    /**
     * Returns all values (both active and not active) from a given dictionary.
     *
     * Returns all values (both active and not active) from a given dictionary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAllByTypeTest() throws ApiException {
        String type = null;
        String nameEquals = null;
        DictionaryEntity response = api.getAllByType(type, nameEquals);

        // TODO: test validations
    }
    /**
     * Returns specific value from a given dictionary.
     *
     * Returns specific value from a given dictionary.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getByTypeAndIdTest() throws ApiException {
        String type = null;
        Long id = null;
        DictionaryEntity response = api.getByTypeAndId(type, id);

        // TODO: test validations
    }
}
