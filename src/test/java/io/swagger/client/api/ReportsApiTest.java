/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ExportRequestDTO;
import io.swagger.client.model.ImportRequestDTO;
import io.swagger.client.model.ImportResultDTO;
import io.swagger.client.model.PreferredRequestDTO;
import io.swagger.client.model.ReportResultDTO;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportsApi
 */
@Ignore
public class ReportsApiTest {

    private final ReportsApi api = new ReportsApi();

    /**
     * Removes a report.
     *
     * Removes a report.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void delete4Test() throws ApiException {
        Long reportId = null;
        api.delete4(reportId);

        // TODO: test validations
    }
    /**
     * Duplicates a report.
     *
     * Duplicates a report.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void duplicate1Test() throws ApiException {
        Long reportId = null;
        api.duplicate1(reportId);

        // TODO: test validations
    }
    /**
     * Exports reports definition to XML.
     *
     * Exports reports definition to XML.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void exportToXMLTest() throws ApiException {
        ExportRequestDTO body = null;
        ReportResultDTO response = api.exportToXML(body);

        // TODO: test validations
    }
    /**
     * Generates CSV content for a report.
     *
     * Generates CSV content for a report.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generateCSVTest() throws ApiException {
        Long reportId = null;
        ReportResultDTO response = api.generateCSV(reportId);

        // TODO: test validations
    }
    /**
     * Generates printer friendly content for a report.
     *
     * Generates printer friendly content for a report.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void generatePrinterFriendlyTest() throws ApiException {
        Long reportId = null;
        ReportResultDTO response = api.generatePrinterFriendly(reportId);

        // TODO: test validations
    }
    /**
     * Imports reports definition from XML.
     *
     * Imports a report definition from an XML using a file token. To obtain the token, you first need to upload a temporary XML file, as specified in the Files section. Note that the name of the imported report must be unique.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void importFromXMLTest() throws ApiException {
        ImportRequestDTO body = null;
        ImportResultDTO response = api.importFromXML(body);

        // TODO: test validations
    }
    /**
     * Marks report as preferred or not.
     *
     * Marks report as preferred or not.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void setPreferredTest() throws ApiException {
        PreferredRequestDTO body = null;
        Long reportId = null;
        api.setPreferred(body, reportId);

        // TODO: test validations
    }
}
