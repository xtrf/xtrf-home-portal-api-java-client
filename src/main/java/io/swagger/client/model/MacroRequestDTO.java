/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
/**
 * MacroRequestDTO
 */


public class MacroRequestDTO {
  @SerializedName("ids")
  private List<Long> ids = null;

  @SerializedName("params")
  private Map<String, Object> params = null;

  @SerializedName("async")
  private Boolean async = null;

  public MacroRequestDTO ids(List<Long> ids) {
    this.ids = ids;
    return this;
  }

  public MacroRequestDTO addIdsItem(Long idsItem) {
    if (this.ids == null) {
      this.ids = new ArrayList<Long>();
    }
    this.ids.add(idsItem);
    return this;
  }

   /**
   * list of internal identifiers of elements to be processed by the macro, can be empty for certain macros
   * @return ids
  **/
  @Schema(description = "list of internal identifiers of elements to be processed by the macro, can be empty for certain macros")
  public List<Long> getIds() {
    return ids;
  }

  public void setIds(List<Long> ids) {
    this.ids = ids;
  }

  public MacroRequestDTO params(Map<String, Object> params) {
    this.params = params;
    return this;
  }

  public MacroRequestDTO putParamsItem(String key, Object paramsItem) {
    if (this.params == null) {
      this.params = new HashMap<String, Object>();
    }
    this.params.put(key, paramsItem);
    return this;
  }

   /**
   * map of custom key-value pairs that can optionally parametrize the macro execution
   * @return params
  **/
  @Schema(description = "map of custom key-value pairs that can optionally parametrize the macro execution")
  public Map<String, Object> getParams() {
    return params;
  }

  public void setParams(Map<String, Object> params) {
    this.params = params;
  }

  public MacroRequestDTO async(Boolean async) {
    this.async = async;
    return this;
  }

   /**
   * indicates whether the macro should be executed asynchronously or synchronously (default: false)
   * @return async
  **/
  @Schema(description = "indicates whether the macro should be executed asynchronously or synchronously (default: false)")
  public Boolean isAsync() {
    return async;
  }

  public void setAsync(Boolean async) {
    this.async = async;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MacroRequestDTO macroRequestDTO = (MacroRequestDTO) o;
    return Objects.equals(this.ids, macroRequestDTO.ids) &&
        Objects.equals(this.params, macroRequestDTO.params) &&
        Objects.equals(this.async, macroRequestDTO.async);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ids, params, async);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MacroRequestDTO {\n");
    
    sb.append("    ids: ").append(toIndentedString(ids)).append("\n");
    sb.append("    params: ").append(toIndentedString(params)).append("\n");
    sb.append("    async: ").append(toIndentedString(async)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
