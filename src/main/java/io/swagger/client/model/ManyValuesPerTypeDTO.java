/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CalculationUnitDTO;
import io.swagger.client.model.CategoryDTO;
import io.swagger.client.model.CountryDTO;
import io.swagger.client.model.CurrencyDTO;
import io.swagger.client.model.IndustryDTO;
import io.swagger.client.model.JobTypeDTO;
import io.swagger.client.model.LanguageDTO;
import io.swagger.client.model.LanguageSpecializationDTO;
import io.swagger.client.model.LeadSourceDTO;
import io.swagger.client.model.PersonDepartmentDTO;
import io.swagger.client.model.PersonPositionDTO;
import io.swagger.client.model.ProvinceDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ManyValuesPerTypeDTO
 */


public class ManyValuesPerTypeDTO {
  @SerializedName("calculationUnit")
  private List<CalculationUnitDTO> calculationUnit = null;

  @SerializedName("category")
  private List<CategoryDTO> category = null;

  @SerializedName("country")
  private List<CountryDTO> country = null;

  @SerializedName("currency")
  private List<CurrencyDTO> currency = null;

  @SerializedName("industry")
  private List<IndustryDTO> industry = null;

  @SerializedName("jobType")
  private List<JobTypeDTO> jobType = null;

  @SerializedName("language")
  private List<LanguageDTO> language = null;

  @SerializedName("leadSource")
  private List<LeadSourceDTO> leadSource = null;

  @SerializedName("personDepartment")
  private List<PersonDepartmentDTO> personDepartment = null;

  @SerializedName("personPosition")
  private List<PersonPositionDTO> personPosition = null;

  @SerializedName("province")
  private List<ProvinceDTO> province = null;

  @SerializedName("specialization")
  private List<LanguageSpecializationDTO> specialization = null;

  public ManyValuesPerTypeDTO calculationUnit(List<CalculationUnitDTO> calculationUnit) {
    this.calculationUnit = calculationUnit;
    return this;
  }

  public ManyValuesPerTypeDTO addCalculationUnitItem(CalculationUnitDTO calculationUnitItem) {
    if (this.calculationUnit == null) {
      this.calculationUnit = new ArrayList<CalculationUnitDTO>();
    }
    this.calculationUnit.add(calculationUnitItem);
    return this;
  }

   /**
   * Get calculationUnit
   * @return calculationUnit
  **/
  @Schema(description = "")
  public List<CalculationUnitDTO> getCalculationUnit() {
    return calculationUnit;
  }

  public void setCalculationUnit(List<CalculationUnitDTO> calculationUnit) {
    this.calculationUnit = calculationUnit;
  }

  public ManyValuesPerTypeDTO category(List<CategoryDTO> category) {
    this.category = category;
    return this;
  }

  public ManyValuesPerTypeDTO addCategoryItem(CategoryDTO categoryItem) {
    if (this.category == null) {
      this.category = new ArrayList<CategoryDTO>();
    }
    this.category.add(categoryItem);
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @Schema(description = "")
  public List<CategoryDTO> getCategory() {
    return category;
  }

  public void setCategory(List<CategoryDTO> category) {
    this.category = category;
  }

  public ManyValuesPerTypeDTO country(List<CountryDTO> country) {
    this.country = country;
    return this;
  }

  public ManyValuesPerTypeDTO addCountryItem(CountryDTO countryItem) {
    if (this.country == null) {
      this.country = new ArrayList<CountryDTO>();
    }
    this.country.add(countryItem);
    return this;
  }

   /**
   * Get country
   * @return country
  **/
  @Schema(description = "")
  public List<CountryDTO> getCountry() {
    return country;
  }

  public void setCountry(List<CountryDTO> country) {
    this.country = country;
  }

  public ManyValuesPerTypeDTO currency(List<CurrencyDTO> currency) {
    this.currency = currency;
    return this;
  }

  public ManyValuesPerTypeDTO addCurrencyItem(CurrencyDTO currencyItem) {
    if (this.currency == null) {
      this.currency = new ArrayList<CurrencyDTO>();
    }
    this.currency.add(currencyItem);
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @Schema(description = "")
  public List<CurrencyDTO> getCurrency() {
    return currency;
  }

  public void setCurrency(List<CurrencyDTO> currency) {
    this.currency = currency;
  }

  public ManyValuesPerTypeDTO industry(List<IndustryDTO> industry) {
    this.industry = industry;
    return this;
  }

  public ManyValuesPerTypeDTO addIndustryItem(IndustryDTO industryItem) {
    if (this.industry == null) {
      this.industry = new ArrayList<IndustryDTO>();
    }
    this.industry.add(industryItem);
    return this;
  }

   /**
   * Get industry
   * @return industry
  **/
  @Schema(description = "")
  public List<IndustryDTO> getIndustry() {
    return industry;
  }

  public void setIndustry(List<IndustryDTO> industry) {
    this.industry = industry;
  }

  public ManyValuesPerTypeDTO jobType(List<JobTypeDTO> jobType) {
    this.jobType = jobType;
    return this;
  }

  public ManyValuesPerTypeDTO addJobTypeItem(JobTypeDTO jobTypeItem) {
    if (this.jobType == null) {
      this.jobType = new ArrayList<JobTypeDTO>();
    }
    this.jobType.add(jobTypeItem);
    return this;
  }

   /**
   * Get jobType
   * @return jobType
  **/
  @Schema(description = "")
  public List<JobTypeDTO> getJobType() {
    return jobType;
  }

  public void setJobType(List<JobTypeDTO> jobType) {
    this.jobType = jobType;
  }

  public ManyValuesPerTypeDTO language(List<LanguageDTO> language) {
    this.language = language;
    return this;
  }

  public ManyValuesPerTypeDTO addLanguageItem(LanguageDTO languageItem) {
    if (this.language == null) {
      this.language = new ArrayList<LanguageDTO>();
    }
    this.language.add(languageItem);
    return this;
  }

   /**
   * Get language
   * @return language
  **/
  @Schema(description = "")
  public List<LanguageDTO> getLanguage() {
    return language;
  }

  public void setLanguage(List<LanguageDTO> language) {
    this.language = language;
  }

  public ManyValuesPerTypeDTO leadSource(List<LeadSourceDTO> leadSource) {
    this.leadSource = leadSource;
    return this;
  }

  public ManyValuesPerTypeDTO addLeadSourceItem(LeadSourceDTO leadSourceItem) {
    if (this.leadSource == null) {
      this.leadSource = new ArrayList<LeadSourceDTO>();
    }
    this.leadSource.add(leadSourceItem);
    return this;
  }

   /**
   * Get leadSource
   * @return leadSource
  **/
  @Schema(description = "")
  public List<LeadSourceDTO> getLeadSource() {
    return leadSource;
  }

  public void setLeadSource(List<LeadSourceDTO> leadSource) {
    this.leadSource = leadSource;
  }

  public ManyValuesPerTypeDTO personDepartment(List<PersonDepartmentDTO> personDepartment) {
    this.personDepartment = personDepartment;
    return this;
  }

  public ManyValuesPerTypeDTO addPersonDepartmentItem(PersonDepartmentDTO personDepartmentItem) {
    if (this.personDepartment == null) {
      this.personDepartment = new ArrayList<PersonDepartmentDTO>();
    }
    this.personDepartment.add(personDepartmentItem);
    return this;
  }

   /**
   * Get personDepartment
   * @return personDepartment
  **/
  @Schema(description = "")
  public List<PersonDepartmentDTO> getPersonDepartment() {
    return personDepartment;
  }

  public void setPersonDepartment(List<PersonDepartmentDTO> personDepartment) {
    this.personDepartment = personDepartment;
  }

  public ManyValuesPerTypeDTO personPosition(List<PersonPositionDTO> personPosition) {
    this.personPosition = personPosition;
    return this;
  }

  public ManyValuesPerTypeDTO addPersonPositionItem(PersonPositionDTO personPositionItem) {
    if (this.personPosition == null) {
      this.personPosition = new ArrayList<PersonPositionDTO>();
    }
    this.personPosition.add(personPositionItem);
    return this;
  }

   /**
   * Get personPosition
   * @return personPosition
  **/
  @Schema(description = "")
  public List<PersonPositionDTO> getPersonPosition() {
    return personPosition;
  }

  public void setPersonPosition(List<PersonPositionDTO> personPosition) {
    this.personPosition = personPosition;
  }

  public ManyValuesPerTypeDTO province(List<ProvinceDTO> province) {
    this.province = province;
    return this;
  }

  public ManyValuesPerTypeDTO addProvinceItem(ProvinceDTO provinceItem) {
    if (this.province == null) {
      this.province = new ArrayList<ProvinceDTO>();
    }
    this.province.add(provinceItem);
    return this;
  }

   /**
   * Get province
   * @return province
  **/
  @Schema(description = "")
  public List<ProvinceDTO> getProvince() {
    return province;
  }

  public void setProvince(List<ProvinceDTO> province) {
    this.province = province;
  }

  public ManyValuesPerTypeDTO specialization(List<LanguageSpecializationDTO> specialization) {
    this.specialization = specialization;
    return this;
  }

  public ManyValuesPerTypeDTO addSpecializationItem(LanguageSpecializationDTO specializationItem) {
    if (this.specialization == null) {
      this.specialization = new ArrayList<LanguageSpecializationDTO>();
    }
    this.specialization.add(specializationItem);
    return this;
  }

   /**
   * Get specialization
   * @return specialization
  **/
  @Schema(description = "")
  public List<LanguageSpecializationDTO> getSpecialization() {
    return specialization;
  }

  public void setSpecialization(List<LanguageSpecializationDTO> specialization) {
    this.specialization = specialization;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManyValuesPerTypeDTO manyValuesPerTypeDTO = (ManyValuesPerTypeDTO) o;
    return Objects.equals(this.calculationUnit, manyValuesPerTypeDTO.calculationUnit) &&
        Objects.equals(this.category, manyValuesPerTypeDTO.category) &&
        Objects.equals(this.country, manyValuesPerTypeDTO.country) &&
        Objects.equals(this.currency, manyValuesPerTypeDTO.currency) &&
        Objects.equals(this.industry, manyValuesPerTypeDTO.industry) &&
        Objects.equals(this.jobType, manyValuesPerTypeDTO.jobType) &&
        Objects.equals(this.language, manyValuesPerTypeDTO.language) &&
        Objects.equals(this.leadSource, manyValuesPerTypeDTO.leadSource) &&
        Objects.equals(this.personDepartment, manyValuesPerTypeDTO.personDepartment) &&
        Objects.equals(this.personPosition, manyValuesPerTypeDTO.personPosition) &&
        Objects.equals(this.province, manyValuesPerTypeDTO.province) &&
        Objects.equals(this.specialization, manyValuesPerTypeDTO.specialization);
  }

  @Override
  public int hashCode() {
    return Objects.hash(calculationUnit, category, country, currency, industry, jobType, language, leadSource, personDepartment, personPosition, province, specialization);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManyValuesPerTypeDTO {\n");
    
    sb.append("    calculationUnit: ").append(toIndentedString(calculationUnit)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    country: ").append(toIndentedString(country)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    industry: ").append(toIndentedString(industry)).append("\n");
    sb.append("    jobType: ").append(toIndentedString(jobType)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    leadSource: ").append(toIndentedString(leadSource)).append("\n");
    sb.append("    personDepartment: ").append(toIndentedString(personDepartment)).append("\n");
    sb.append("    personPosition: ").append(toIndentedString(personPosition)).append("\n");
    sb.append("    province: ").append(toIndentedString(province)).append("\n");
    sb.append("    specialization: ").append(toIndentedString(specialization)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
