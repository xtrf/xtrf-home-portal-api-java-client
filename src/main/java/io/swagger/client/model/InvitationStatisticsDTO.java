/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * InvitationStatisticsDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-07-02T16:14:58.802Z[GMT]")
public class InvitationStatisticsDTO {
  @SerializedName("providersWithInvitedPersonCount")
  private Integer providersWithInvitedPersonCount = null;

  @SerializedName("providersWithAlreadyRegisteredPersonCount")
  private Integer providersWithAlreadyRegisteredPersonCount = null;

  @SerializedName("providersWithoutPersonCount")
  private Integer providersWithoutPersonCount = null;

  @SerializedName("invitedPersonsCount")
  private Integer invitedPersonsCount = null;

  @SerializedName("alreadyRegisteredPersonsCount")
  private Integer alreadyRegisteredPersonsCount = null;

  public InvitationStatisticsDTO providersWithInvitedPersonCount(Integer providersWithInvitedPersonCount) {
    this.providersWithInvitedPersonCount = providersWithInvitedPersonCount;
    return this;
  }

   /**
   * Get providersWithInvitedPersonCount
   * @return providersWithInvitedPersonCount
  **/
  @Schema(description = "")
  public Integer getProvidersWithInvitedPersonCount() {
    return providersWithInvitedPersonCount;
  }

  public void setProvidersWithInvitedPersonCount(Integer providersWithInvitedPersonCount) {
    this.providersWithInvitedPersonCount = providersWithInvitedPersonCount;
  }

  public InvitationStatisticsDTO providersWithAlreadyRegisteredPersonCount(Integer providersWithAlreadyRegisteredPersonCount) {
    this.providersWithAlreadyRegisteredPersonCount = providersWithAlreadyRegisteredPersonCount;
    return this;
  }

   /**
   * Get providersWithAlreadyRegisteredPersonCount
   * @return providersWithAlreadyRegisteredPersonCount
  **/
  @Schema(description = "")
  public Integer getProvidersWithAlreadyRegisteredPersonCount() {
    return providersWithAlreadyRegisteredPersonCount;
  }

  public void setProvidersWithAlreadyRegisteredPersonCount(Integer providersWithAlreadyRegisteredPersonCount) {
    this.providersWithAlreadyRegisteredPersonCount = providersWithAlreadyRegisteredPersonCount;
  }

  public InvitationStatisticsDTO providersWithoutPersonCount(Integer providersWithoutPersonCount) {
    this.providersWithoutPersonCount = providersWithoutPersonCount;
    return this;
  }

   /**
   * Get providersWithoutPersonCount
   * @return providersWithoutPersonCount
  **/
  @Schema(description = "")
  public Integer getProvidersWithoutPersonCount() {
    return providersWithoutPersonCount;
  }

  public void setProvidersWithoutPersonCount(Integer providersWithoutPersonCount) {
    this.providersWithoutPersonCount = providersWithoutPersonCount;
  }

  public InvitationStatisticsDTO invitedPersonsCount(Integer invitedPersonsCount) {
    this.invitedPersonsCount = invitedPersonsCount;
    return this;
  }

   /**
   * Get invitedPersonsCount
   * @return invitedPersonsCount
  **/
  @Schema(description = "")
  public Integer getInvitedPersonsCount() {
    return invitedPersonsCount;
  }

  public void setInvitedPersonsCount(Integer invitedPersonsCount) {
    this.invitedPersonsCount = invitedPersonsCount;
  }

  public InvitationStatisticsDTO alreadyRegisteredPersonsCount(Integer alreadyRegisteredPersonsCount) {
    this.alreadyRegisteredPersonsCount = alreadyRegisteredPersonsCount;
    return this;
  }

   /**
   * Get alreadyRegisteredPersonsCount
   * @return alreadyRegisteredPersonsCount
  **/
  @Schema(description = "")
  public Integer getAlreadyRegisteredPersonsCount() {
    return alreadyRegisteredPersonsCount;
  }

  public void setAlreadyRegisteredPersonsCount(Integer alreadyRegisteredPersonsCount) {
    this.alreadyRegisteredPersonsCount = alreadyRegisteredPersonsCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    InvitationStatisticsDTO invitationStatisticsDTO = (InvitationStatisticsDTO) o;
    return Objects.equals(this.providersWithInvitedPersonCount, invitationStatisticsDTO.providersWithInvitedPersonCount) &&
        Objects.equals(this.providersWithAlreadyRegisteredPersonCount, invitationStatisticsDTO.providersWithAlreadyRegisteredPersonCount) &&
        Objects.equals(this.providersWithoutPersonCount, invitationStatisticsDTO.providersWithoutPersonCount) &&
        Objects.equals(this.invitedPersonsCount, invitationStatisticsDTO.invitedPersonsCount) &&
        Objects.equals(this.alreadyRegisteredPersonsCount, invitationStatisticsDTO.alreadyRegisteredPersonsCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(providersWithInvitedPersonCount, providersWithAlreadyRegisteredPersonCount, providersWithoutPersonCount, invitedPersonsCount, alreadyRegisteredPersonsCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class InvitationStatisticsDTO {\n");
    
    sb.append("    providersWithInvitedPersonCount: ").append(toIndentedString(providersWithInvitedPersonCount)).append("\n");
    sb.append("    providersWithAlreadyRegisteredPersonCount: ").append(toIndentedString(providersWithAlreadyRegisteredPersonCount)).append("\n");
    sb.append("    providersWithoutPersonCount: ").append(toIndentedString(providersWithoutPersonCount)).append("\n");
    sb.append("    invitedPersonsCount: ").append(toIndentedString(invitedPersonsCount)).append("\n");
    sb.append("    alreadyRegisteredPersonsCount: ").append(toIndentedString(alreadyRegisteredPersonsCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
