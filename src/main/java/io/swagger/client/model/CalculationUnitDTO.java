/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CalculationUnitDTO
 */

@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2019-07-02T16:14:58.802Z[GMT]")
public class CalculationUnitDTO {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("preferred")
  private Boolean preferred = null;

  @SerializedName("symbol")
  private String symbol = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    TIME("TIME"),
    VOLUME("VOLUME"),
    PERCENT("PERCENT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("exchangeRatio")
  private BigDecimal exchangeRatio = null;

  @SerializedName("canBeUsedInCatAnalysis")
  private Boolean canBeUsedInCatAnalysis = null;

  @SerializedName("catQuantityConversionExpression")
  private String catQuantityConversionExpression = null;

  @SerializedName("fileStatsConversionExpression")
  private String fileStatsConversionExpression = null;

  @SerializedName("timeToQuantityConversionExpression")
  private String timeToQuantityConversionExpression = null;

  @SerializedName("jobTypeIds")
  private List<Long> jobTypeIds = null;

  @SerializedName("default")
  private Boolean _default = null;

  public CalculationUnitDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * internal identifier
   * @return id
  **/
  @Schema(description = "internal identifier")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CalculationUnitDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * localised name (formatted in the current user&#x27;s locale)
   * @return name
  **/
  @Schema(description = "localised name (formatted in the current user's locale)")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CalculationUnitDTO active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * should this value be available on the XTRF selection lists
   * @return active
  **/
  @Schema(description = "should this value be available on the XTRF selection lists")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public CalculationUnitDTO preferred(Boolean preferred) {
    this.preferred = preferred;
    return this;
  }

   /**
   * should this value be available on the top of XTRF selection lists, in the Preferred section
   * @return preferred
  **/
  @Schema(description = "should this value be available on the top of XTRF selection lists, in the Preferred section")
  public Boolean isPreferred() {
    return preferred;
  }

  public void setPreferred(Boolean preferred) {
    this.preferred = preferred;
  }

  public CalculationUnitDTO symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @Schema(description = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CalculationUnitDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CalculationUnitDTO exchangeRatio(BigDecimal exchangeRatio) {
    this.exchangeRatio = exchangeRatio;
    return this;
  }

   /**
   * Get exchangeRatio
   * @return exchangeRatio
  **/
  @Schema(description = "")
  public BigDecimal getExchangeRatio() {
    return exchangeRatio;
  }

  public void setExchangeRatio(BigDecimal exchangeRatio) {
    this.exchangeRatio = exchangeRatio;
  }

  public CalculationUnitDTO canBeUsedInCatAnalysis(Boolean canBeUsedInCatAnalysis) {
    this.canBeUsedInCatAnalysis = canBeUsedInCatAnalysis;
    return this;
  }

   /**
   * Get canBeUsedInCatAnalysis
   * @return canBeUsedInCatAnalysis
  **/
  @Schema(description = "")
  public Boolean isCanBeUsedInCatAnalysis() {
    return canBeUsedInCatAnalysis;
  }

  public void setCanBeUsedInCatAnalysis(Boolean canBeUsedInCatAnalysis) {
    this.canBeUsedInCatAnalysis = canBeUsedInCatAnalysis;
  }

  public CalculationUnitDTO catQuantityConversionExpression(String catQuantityConversionExpression) {
    this.catQuantityConversionExpression = catQuantityConversionExpression;
    return this;
  }

   /**
   * Get catQuantityConversionExpression
   * @return catQuantityConversionExpression
  **/
  @Schema(description = "")
  public String getCatQuantityConversionExpression() {
    return catQuantityConversionExpression;
  }

  public void setCatQuantityConversionExpression(String catQuantityConversionExpression) {
    this.catQuantityConversionExpression = catQuantityConversionExpression;
  }

  public CalculationUnitDTO fileStatsConversionExpression(String fileStatsConversionExpression) {
    this.fileStatsConversionExpression = fileStatsConversionExpression;
    return this;
  }

   /**
   * Get fileStatsConversionExpression
   * @return fileStatsConversionExpression
  **/
  @Schema(description = "")
  public String getFileStatsConversionExpression() {
    return fileStatsConversionExpression;
  }

  public void setFileStatsConversionExpression(String fileStatsConversionExpression) {
    this.fileStatsConversionExpression = fileStatsConversionExpression;
  }

  public CalculationUnitDTO timeToQuantityConversionExpression(String timeToQuantityConversionExpression) {
    this.timeToQuantityConversionExpression = timeToQuantityConversionExpression;
    return this;
  }

   /**
   * Get timeToQuantityConversionExpression
   * @return timeToQuantityConversionExpression
  **/
  @Schema(description = "")
  public String getTimeToQuantityConversionExpression() {
    return timeToQuantityConversionExpression;
  }

  public void setTimeToQuantityConversionExpression(String timeToQuantityConversionExpression) {
    this.timeToQuantityConversionExpression = timeToQuantityConversionExpression;
  }

  public CalculationUnitDTO jobTypeIds(List<Long> jobTypeIds) {
    this.jobTypeIds = jobTypeIds;
    return this;
  }

  public CalculationUnitDTO addJobTypeIdsItem(Long jobTypeIdsItem) {
    if (this.jobTypeIds == null) {
      this.jobTypeIds = new ArrayList<Long>();
    }
    this.jobTypeIds.add(jobTypeIdsItem);
    return this;
  }

   /**
   * Get jobTypeIds
   * @return jobTypeIds
  **/
  @Schema(description = "")
  public List<Long> getJobTypeIds() {
    return jobTypeIds;
  }

  public void setJobTypeIds(List<Long> jobTypeIds) {
    this.jobTypeIds = jobTypeIds;
  }

  public CalculationUnitDTO _default(Boolean _default) {
    this._default = _default;
    return this;
  }

   /**
   * Get _default
   * @return _default
  **/
  @Schema(description = "")
  public Boolean isDefault() {
    return _default;
  }

  public void setDefault(Boolean _default) {
    this._default = _default;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CalculationUnitDTO calculationUnitDTO = (CalculationUnitDTO) o;
    return Objects.equals(this.id, calculationUnitDTO.id) &&
        Objects.equals(this.name, calculationUnitDTO.name) &&
        Objects.equals(this.active, calculationUnitDTO.active) &&
        Objects.equals(this.preferred, calculationUnitDTO.preferred) &&
        Objects.equals(this.symbol, calculationUnitDTO.symbol) &&
        Objects.equals(this.type, calculationUnitDTO.type) &&
        Objects.equals(this.exchangeRatio, calculationUnitDTO.exchangeRatio) &&
        Objects.equals(this.canBeUsedInCatAnalysis, calculationUnitDTO.canBeUsedInCatAnalysis) &&
        Objects.equals(this.catQuantityConversionExpression, calculationUnitDTO.catQuantityConversionExpression) &&
        Objects.equals(this.fileStatsConversionExpression, calculationUnitDTO.fileStatsConversionExpression) &&
        Objects.equals(this.timeToQuantityConversionExpression, calculationUnitDTO.timeToQuantityConversionExpression) &&
        Objects.equals(this.jobTypeIds, calculationUnitDTO.jobTypeIds) &&
        Objects.equals(this._default, calculationUnitDTO._default);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, active, preferred, symbol, type, exchangeRatio, canBeUsedInCatAnalysis, catQuantityConversionExpression, fileStatsConversionExpression, timeToQuantityConversionExpression, jobTypeIds, _default);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CalculationUnitDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    preferred: ").append(toIndentedString(preferred)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    exchangeRatio: ").append(toIndentedString(exchangeRatio)).append("\n");
    sb.append("    canBeUsedInCatAnalysis: ").append(toIndentedString(canBeUsedInCatAnalysis)).append("\n");
    sb.append("    catQuantityConversionExpression: ").append(toIndentedString(catQuantityConversionExpression)).append("\n");
    sb.append("    fileStatsConversionExpression: ").append(toIndentedString(fileStatsConversionExpression)).append("\n");
    sb.append("    timeToQuantityConversionExpression: ").append(toIndentedString(timeToQuantityConversionExpression)).append("\n");
    sb.append("    jobTypeIds: ").append(toIndentedString(jobTypeIds)).append("\n");
    sb.append("    _default: ").append(toIndentedString(_default)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
