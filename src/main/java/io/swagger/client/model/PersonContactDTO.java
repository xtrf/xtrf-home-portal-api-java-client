/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.PersonContactEmailsDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * PersonContactDTO
 */


public class PersonContactDTO {
  @SerializedName("phones")
  private List<String> phones = null;

  @SerializedName("sms")
  private String sms = null;

  @SerializedName("fax")
  private String fax = null;

  @SerializedName("emails")
  private PersonContactEmailsDTO emails = null;

  public PersonContactDTO phones(List<String> phones) {
    this.phones = phones;
    return this;
  }

  public PersonContactDTO addPhonesItem(String phonesItem) {
    if (this.phones == null) {
      this.phones = new ArrayList<String>();
    }
    this.phones.add(phonesItem);
    return this;
  }

   /**
   * phones numbers
   * @return phones
  **/
  @Schema(description = "phones' numbers")
  public List<String> getPhones() {
    return phones;
  }

  public void setPhones(List<String> phones) {
    this.phones = phones;
  }

  public PersonContactDTO sms(String sms) {
    this.sms = sms;
    return this;
  }

   /**
   * mobile phone for which SMS notifications will be sent (if configured)
   * @return sms
  **/
  @Schema(description = "mobile phone for which SMS notifications will be sent (if configured)")
  public String getSms() {
    return sms;
  }

  public void setSms(String sms) {
    this.sms = sms;
  }

  public PersonContactDTO fax(String fax) {
    this.fax = fax;
    return this;
  }

   /**
   * fax number
   * @return fax
  **/
  @Schema(description = "fax number")
  public String getFax() {
    return fax;
  }

  public void setFax(String fax) {
    this.fax = fax;
  }

  public PersonContactDTO emails(PersonContactEmailsDTO emails) {
    this.emails = emails;
    return this;
  }

   /**
   * Get emails
   * @return emails
  **/
  @Schema(description = "")
  public PersonContactEmailsDTO getEmails() {
    return emails;
  }

  public void setEmails(PersonContactEmailsDTO emails) {
    this.emails = emails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PersonContactDTO personContactDTO = (PersonContactDTO) o;
    return Objects.equals(this.phones, personContactDTO.phones) &&
        Objects.equals(this.sms, personContactDTO.sms) &&
        Objects.equals(this.fax, personContactDTO.fax) &&
        Objects.equals(this.emails, personContactDTO.emails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(phones, sms, fax, emails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PersonContactDTO {\n");
    
    sb.append("    phones: ").append(toIndentedString(phones)).append("\n");
    sb.append("    sms: ").append(toIndentedString(sms)).append("\n");
    sb.append("    fax: ").append(toIndentedString(fax)).append("\n");
    sb.append("    emails: ").append(toIndentedString(emails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
