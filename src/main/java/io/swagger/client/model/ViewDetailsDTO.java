/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.AccessDTO;
import io.swagger.client.model.ActionDTO;
import io.swagger.client.model.FilterDTO;
import io.swagger.client.model.ViewDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * ViewDetailsDTO
 */


public class ViewDetailsDTO {
  @SerializedName("viewId")
  private Long viewId = null;

  @SerializedName("access")
  private AccessDTO access = null;

  @SerializedName("view")
  private ViewDTO view = null;

  @SerializedName("filter")
  private FilterDTO filter = null;

  @SerializedName("actions")
  private List<ActionDTO> actions = null;

  public ViewDetailsDTO viewId(Long viewId) {
    this.viewId = viewId;
    return this;
  }

   /**
   * Get viewId
   * @return viewId
  **/
  @Schema(description = "")
  public Long getViewId() {
    return viewId;
  }

  public void setViewId(Long viewId) {
    this.viewId = viewId;
  }

  public ViewDetailsDTO access(AccessDTO access) {
    this.access = access;
    return this;
  }

   /**
   * Get access
   * @return access
  **/
  @Schema(description = "")
  public AccessDTO getAccess() {
    return access;
  }

  public void setAccess(AccessDTO access) {
    this.access = access;
  }

  public ViewDetailsDTO view(ViewDTO view) {
    this.view = view;
    return this;
  }

   /**
   * Get view
   * @return view
  **/
  @Schema(description = "")
  public ViewDTO getView() {
    return view;
  }

  public void setView(ViewDTO view) {
    this.view = view;
  }

  public ViewDetailsDTO filter(FilterDTO filter) {
    this.filter = filter;
    return this;
  }

   /**
   * Get filter
   * @return filter
  **/
  @Schema(description = "")
  public FilterDTO getFilter() {
    return filter;
  }

  public void setFilter(FilterDTO filter) {
    this.filter = filter;
  }

  public ViewDetailsDTO actions(List<ActionDTO> actions) {
    this.actions = actions;
    return this;
  }

  public ViewDetailsDTO addActionsItem(ActionDTO actionsItem) {
    if (this.actions == null) {
      this.actions = new ArrayList<ActionDTO>();
    }
    this.actions.add(actionsItem);
    return this;
  }

   /**
   * Get actions
   * @return actions
  **/
  @Schema(description = "")
  public List<ActionDTO> getActions() {
    return actions;
  }

  public void setActions(List<ActionDTO> actions) {
    this.actions = actions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ViewDetailsDTO viewDetailsDTO = (ViewDetailsDTO) o;
    return Objects.equals(this.viewId, viewDetailsDTO.viewId) &&
        Objects.equals(this.access, viewDetailsDTO.access) &&
        Objects.equals(this.view, viewDetailsDTO.view) &&
        Objects.equals(this.filter, viewDetailsDTO.filter) &&
        Objects.equals(this.actions, viewDetailsDTO.actions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(viewId, access, view, filter, actions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ViewDetailsDTO {\n");
    
    sb.append("    viewId: ").append(toIndentedString(viewId)).append("\n");
    sb.append("    access: ").append(toIndentedString(access)).append("\n");
    sb.append("    view: ").append(toIndentedString(view)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    actions: ").append(toIndentedString(actions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
