/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ChargeDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * FinanceDTO
 */


public class FinanceDTO {
  @SerializedName("currencyId")
  private Long currencyId = null;

  @SerializedName("totalAgreed")
  private BigDecimal totalAgreed = null;

  @SerializedName("totalCost")
  private BigDecimal totalCost = null;

  @SerializedName("profit")
  private BigDecimal profit = null;

  @SerializedName("margin")
  private BigDecimal margin = null;

  @SerializedName("receivables")
  private List<ChargeDTO> receivables = null;

  @SerializedName("payables")
  private List<ChargeDTO> payables = null;

  @SerializedName("ROI")
  private BigDecimal ROI = null;

  public FinanceDTO currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @Schema(description = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public FinanceDTO totalAgreed(BigDecimal totalAgreed) {
    this.totalAgreed = totalAgreed;
    return this;
  }

   /**
   * Get totalAgreed
   * @return totalAgreed
  **/
  @Schema(description = "")
  public BigDecimal getTotalAgreed() {
    return totalAgreed;
  }

  public void setTotalAgreed(BigDecimal totalAgreed) {
    this.totalAgreed = totalAgreed;
  }

  public FinanceDTO totalCost(BigDecimal totalCost) {
    this.totalCost = totalCost;
    return this;
  }

   /**
   * Get totalCost
   * @return totalCost
  **/
  @Schema(description = "")
  public BigDecimal getTotalCost() {
    return totalCost;
  }

  public void setTotalCost(BigDecimal totalCost) {
    this.totalCost = totalCost;
  }

  public FinanceDTO profit(BigDecimal profit) {
    this.profit = profit;
    return this;
  }

   /**
   * Get profit
   * @return profit
  **/
  @Schema(description = "")
  public BigDecimal getProfit() {
    return profit;
  }

  public void setProfit(BigDecimal profit) {
    this.profit = profit;
  }

  public FinanceDTO margin(BigDecimal margin) {
    this.margin = margin;
    return this;
  }

   /**
   * Get margin
   * @return margin
  **/
  @Schema(description = "")
  public BigDecimal getMargin() {
    return margin;
  }

  public void setMargin(BigDecimal margin) {
    this.margin = margin;
  }

  public FinanceDTO receivables(List<ChargeDTO> receivables) {
    this.receivables = receivables;
    return this;
  }

  public FinanceDTO addReceivablesItem(ChargeDTO receivablesItem) {
    if (this.receivables == null) {
      this.receivables = new ArrayList<ChargeDTO>();
    }
    this.receivables.add(receivablesItem);
    return this;
  }

   /**
   * Get receivables
   * @return receivables
  **/
  @Schema(description = "")
  public List<ChargeDTO> getReceivables() {
    return receivables;
  }

  public void setReceivables(List<ChargeDTO> receivables) {
    this.receivables = receivables;
  }

  public FinanceDTO payables(List<ChargeDTO> payables) {
    this.payables = payables;
    return this;
  }

  public FinanceDTO addPayablesItem(ChargeDTO payablesItem) {
    if (this.payables == null) {
      this.payables = new ArrayList<ChargeDTO>();
    }
    this.payables.add(payablesItem);
    return this;
  }

   /**
   * Get payables
   * @return payables
  **/
  @Schema(description = "")
  public List<ChargeDTO> getPayables() {
    return payables;
  }

  public void setPayables(List<ChargeDTO> payables) {
    this.payables = payables;
  }

  public FinanceDTO ROI(BigDecimal ROI) {
    this.ROI = ROI;
    return this;
  }

   /**
   * Get ROI
   * @return ROI
  **/
  @Schema(description = "")
  public BigDecimal getROI() {
    return ROI;
  }

  public void setROI(BigDecimal ROI) {
    this.ROI = ROI;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FinanceDTO financeDTO = (FinanceDTO) o;
    return Objects.equals(this.currencyId, financeDTO.currencyId) &&
        Objects.equals(this.totalAgreed, financeDTO.totalAgreed) &&
        Objects.equals(this.totalCost, financeDTO.totalCost) &&
        Objects.equals(this.profit, financeDTO.profit) &&
        Objects.equals(this.margin, financeDTO.margin) &&
        Objects.equals(this.receivables, financeDTO.receivables) &&
        Objects.equals(this.payables, financeDTO.payables) &&
        Objects.equals(this.ROI, financeDTO.ROI);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencyId, totalAgreed, totalCost, profit, margin, receivables, payables, ROI);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FinanceDTO {\n");
    
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    totalAgreed: ").append(toIndentedString(totalAgreed)).append("\n");
    sb.append("    totalCost: ").append(toIndentedString(totalCost)).append("\n");
    sb.append("    profit: ").append(toIndentedString(profit)).append("\n");
    sb.append("    margin: ").append(toIndentedString(margin)).append("\n");
    sb.append("    receivables: ").append(toIndentedString(receivables)).append("\n");
    sb.append("    payables: ").append(toIndentedString(payables)).append("\n");
    sb.append("    ROI: ").append(toIndentedString(ROI)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
