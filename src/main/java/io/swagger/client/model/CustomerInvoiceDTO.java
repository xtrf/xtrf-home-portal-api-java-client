/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CustomerDetailsDTO;
import io.swagger.client.model.CustomerInvoiceDatesDTO;
import io.swagger.client.model.PaymentTermsDTO;
import io.swagger.client.model.TaskDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
/**
 * CustomerInvoiceDTO
 */


public class CustomerInvoiceDTO {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("totalGross")
  private BigDecimal totalGross = null;

  @SerializedName("totalNetto")
  private BigDecimal totalNetto = null;

  @SerializedName("currencyId")
  private Long currencyId = null;

  /**
   * Gets or Sets status
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    NOT_READY("NOT_READY"),
    READY("READY"),
    SENT("SENT");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static StatusEnum fromValue(String text) {
      for (StatusEnum b : StatusEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return StatusEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("status")
  private StatusEnum status = null;

  @SerializedName("invoiceNumber")
  private String invoiceNumber = null;

  /**
   * Gets or Sets type
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    FINAL("FINAL"),
    DRAFT("DRAFT");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static TypeEnum fromValue(String text) {
      for (TypeEnum b : TypeEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return TypeEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("type")
  private TypeEnum type = null;

  @SerializedName("tasksValue")
  private BigDecimal tasksValue = null;

  /**
   * Gets or Sets vatCalculationRule
   */
  @JsonAdapter(VatCalculationRuleEnum.Adapter.class)
  public enum VatCalculationRuleEnum {
    SUM_ITEMS("SUM_ITEMS"),
    BY_NET_TOTAL("BY_NET_TOTAL");

    private String value;

    VatCalculationRuleEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static VatCalculationRuleEnum fromValue(String text) {
      for (VatCalculationRuleEnum b : VatCalculationRuleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<VatCalculationRuleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VatCalculationRuleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VatCalculationRuleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return VatCalculationRuleEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("vatCalculationRule")
  private VatCalculationRuleEnum vatCalculationRule = null;

  @SerializedName("totalInWords")
  private String totalInWords = null;

  @SerializedName("paymentMethodId")
  private Long paymentMethodId = null;

  @SerializedName("paymentTerms")
  private PaymentTermsDTO paymentTerms = null;

  @SerializedName("customerId")
  private Long customerId = null;

  @SerializedName("dates")
  private CustomerInvoiceDatesDTO dates = null;

  @SerializedName("tasks")
  private List<TaskDTO> tasks = null;

  @SerializedName("customerDetails")
  private CustomerDetailsDTO customerDetails = null;

  public CustomerInvoiceDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CustomerInvoiceDTO totalGross(BigDecimal totalGross) {
    this.totalGross = totalGross;
    return this;
  }

   /**
   * Get totalGross
   * @return totalGross
  **/
  @Schema(description = "")
  public BigDecimal getTotalGross() {
    return totalGross;
  }

  public void setTotalGross(BigDecimal totalGross) {
    this.totalGross = totalGross;
  }

  public CustomerInvoiceDTO totalNetto(BigDecimal totalNetto) {
    this.totalNetto = totalNetto;
    return this;
  }

   /**
   * Get totalNetto
   * @return totalNetto
  **/
  @Schema(description = "")
  public BigDecimal getTotalNetto() {
    return totalNetto;
  }

  public void setTotalNetto(BigDecimal totalNetto) {
    this.totalNetto = totalNetto;
  }

  public CustomerInvoiceDTO currencyId(Long currencyId) {
    this.currencyId = currencyId;
    return this;
  }

   /**
   * Get currencyId
   * @return currencyId
  **/
  @Schema(description = "")
  public Long getCurrencyId() {
    return currencyId;
  }

  public void setCurrencyId(Long currencyId) {
    this.currencyId = currencyId;
  }

  public CustomerInvoiceDTO status(StatusEnum status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @Schema(description = "")
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(StatusEnum status) {
    this.status = status;
  }

  public CustomerInvoiceDTO invoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
    return this;
  }

   /**
   * Get invoiceNumber
   * @return invoiceNumber
  **/
  @Schema(description = "")
  public String getInvoiceNumber() {
    return invoiceNumber;
  }

  public void setInvoiceNumber(String invoiceNumber) {
    this.invoiceNumber = invoiceNumber;
  }

  public CustomerInvoiceDTO type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @Schema(description = "")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public CustomerInvoiceDTO tasksValue(BigDecimal tasksValue) {
    this.tasksValue = tasksValue;
    return this;
  }

   /**
   * Get tasksValue
   * @return tasksValue
  **/
  @Schema(description = "")
  public BigDecimal getTasksValue() {
    return tasksValue;
  }

  public void setTasksValue(BigDecimal tasksValue) {
    this.tasksValue = tasksValue;
  }

  public CustomerInvoiceDTO vatCalculationRule(VatCalculationRuleEnum vatCalculationRule) {
    this.vatCalculationRule = vatCalculationRule;
    return this;
  }

   /**
   * Get vatCalculationRule
   * @return vatCalculationRule
  **/
  @Schema(description = "")
  public VatCalculationRuleEnum getVatCalculationRule() {
    return vatCalculationRule;
  }

  public void setVatCalculationRule(VatCalculationRuleEnum vatCalculationRule) {
    this.vatCalculationRule = vatCalculationRule;
  }

  public CustomerInvoiceDTO totalInWords(String totalInWords) {
    this.totalInWords = totalInWords;
    return this;
  }

   /**
   * Get totalInWords
   * @return totalInWords
  **/
  @Schema(description = "")
  public String getTotalInWords() {
    return totalInWords;
  }

  public void setTotalInWords(String totalInWords) {
    this.totalInWords = totalInWords;
  }

  public CustomerInvoiceDTO paymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * Get paymentMethodId
   * @return paymentMethodId
  **/
  @Schema(description = "")
  public Long getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(Long paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }

  public CustomerInvoiceDTO paymentTerms(PaymentTermsDTO paymentTerms) {
    this.paymentTerms = paymentTerms;
    return this;
  }

   /**
   * Get paymentTerms
   * @return paymentTerms
  **/
  @Schema(description = "")
  public PaymentTermsDTO getPaymentTerms() {
    return paymentTerms;
  }

  public void setPaymentTerms(PaymentTermsDTO paymentTerms) {
    this.paymentTerms = paymentTerms;
  }

  public CustomerInvoiceDTO customerId(Long customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public Long getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Long customerId) {
    this.customerId = customerId;
  }

  public CustomerInvoiceDTO dates(CustomerInvoiceDatesDTO dates) {
    this.dates = dates;
    return this;
  }

   /**
   * Get dates
   * @return dates
  **/
  @Schema(description = "")
  public CustomerInvoiceDatesDTO getDates() {
    return dates;
  }

  public void setDates(CustomerInvoiceDatesDTO dates) {
    this.dates = dates;
  }

  public CustomerInvoiceDTO tasks(List<TaskDTO> tasks) {
    this.tasks = tasks;
    return this;
  }

  public CustomerInvoiceDTO addTasksItem(TaskDTO tasksItem) {
    if (this.tasks == null) {
      this.tasks = new ArrayList<TaskDTO>();
    }
    this.tasks.add(tasksItem);
    return this;
  }

   /**
   * Get tasks
   * @return tasks
  **/
  @Schema(description = "")
  public List<TaskDTO> getTasks() {
    return tasks;
  }

  public void setTasks(List<TaskDTO> tasks) {
    this.tasks = tasks;
  }

  public CustomerInvoiceDTO customerDetails(CustomerDetailsDTO customerDetails) {
    this.customerDetails = customerDetails;
    return this;
  }

   /**
   * Get customerDetails
   * @return customerDetails
  **/
  @Schema(description = "")
  public CustomerDetailsDTO getCustomerDetails() {
    return customerDetails;
  }

  public void setCustomerDetails(CustomerDetailsDTO customerDetails) {
    this.customerDetails = customerDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerInvoiceDTO customerInvoiceDTO = (CustomerInvoiceDTO) o;
    return Objects.equals(this.id, customerInvoiceDTO.id) &&
        Objects.equals(this.totalGross, customerInvoiceDTO.totalGross) &&
        Objects.equals(this.totalNetto, customerInvoiceDTO.totalNetto) &&
        Objects.equals(this.currencyId, customerInvoiceDTO.currencyId) &&
        Objects.equals(this.status, customerInvoiceDTO.status) &&
        Objects.equals(this.invoiceNumber, customerInvoiceDTO.invoiceNumber) &&
        Objects.equals(this.type, customerInvoiceDTO.type) &&
        Objects.equals(this.tasksValue, customerInvoiceDTO.tasksValue) &&
        Objects.equals(this.vatCalculationRule, customerInvoiceDTO.vatCalculationRule) &&
        Objects.equals(this.totalInWords, customerInvoiceDTO.totalInWords) &&
        Objects.equals(this.paymentMethodId, customerInvoiceDTO.paymentMethodId) &&
        Objects.equals(this.paymentTerms, customerInvoiceDTO.paymentTerms) &&
        Objects.equals(this.customerId, customerInvoiceDTO.customerId) &&
        Objects.equals(this.dates, customerInvoiceDTO.dates) &&
        Objects.equals(this.tasks, customerInvoiceDTO.tasks) &&
        Objects.equals(this.customerDetails, customerInvoiceDTO.customerDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, totalGross, totalNetto, currencyId, status, invoiceNumber, type, tasksValue, vatCalculationRule, totalInWords, paymentMethodId, paymentTerms, customerId, dates, tasks, customerDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerInvoiceDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    totalGross: ").append(toIndentedString(totalGross)).append("\n");
    sb.append("    totalNetto: ").append(toIndentedString(totalNetto)).append("\n");
    sb.append("    currencyId: ").append(toIndentedString(currencyId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    invoiceNumber: ").append(toIndentedString(invoiceNumber)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    tasksValue: ").append(toIndentedString(tasksValue)).append("\n");
    sb.append("    vatCalculationRule: ").append(toIndentedString(vatCalculationRule)).append("\n");
    sb.append("    totalInWords: ").append(toIndentedString(totalInWords)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    paymentTerms: ").append(toIndentedString(paymentTerms)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    dates: ").append(toIndentedString(dates)).append("\n");
    sb.append("    tasks: ").append(toIndentedString(tasks)).append("\n");
    sb.append("    customerDetails: ").append(toIndentedString(customerDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
