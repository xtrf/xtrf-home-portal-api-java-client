/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.CustomFieldDTO;
import io.swagger.client.model.PersonContactDTO;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * CustomerPerson
 */
@Schema(description = "CustomerPerson")

public class CustomerPersonDTO {
  @SerializedName("id")
  private Long id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("lastName")
  private String lastName = null;

  @SerializedName("contact")
  private PersonContactDTO contact = null;

  @SerializedName("positionId")
  private Long positionId = null;

  /**
   * Gets or Sets gender
   */
  @JsonAdapter(GenderEnum.Adapter.class)
  public enum GenderEnum {
    FEMALE("FEMALE"),
    MALE("MALE");

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    public static GenderEnum fromValue(String text) {
      for (GenderEnum b : GenderEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
    public static class Adapter extends TypeAdapter<GenderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final GenderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public GenderEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return GenderEnum.fromValue(String.valueOf(value));
      }
    }
  }  @SerializedName("gender")
  private GenderEnum gender = null;

  @SerializedName("active")
  private Boolean active = null;

  @SerializedName("motherTonguesIds")
  private List<Long> motherTonguesIds = null;

  @SerializedName("customFields")
  private List<CustomFieldDTO> customFields = null;

  @SerializedName("customerId")
  private Long customerId = null;

  public CustomerPersonDTO id(Long id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @Schema(description = "")
  public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

  public CustomerPersonDTO name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @Schema(description = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CustomerPersonDTO lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

   /**
   * Get lastName
   * @return lastName
  **/
  @Schema(description = "")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public CustomerPersonDTO contact(PersonContactDTO contact) {
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @Schema(description = "")
  public PersonContactDTO getContact() {
    return contact;
  }

  public void setContact(PersonContactDTO contact) {
    this.contact = contact;
  }

  public CustomerPersonDTO positionId(Long positionId) {
    this.positionId = positionId;
    return this;
  }

   /**
   * Get positionId
   * @return positionId
  **/
  @Schema(description = "")
  public Long getPositionId() {
    return positionId;
  }

  public void setPositionId(Long positionId) {
    this.positionId = positionId;
  }

  public CustomerPersonDTO gender(GenderEnum gender) {
    this.gender = gender;
    return this;
  }

   /**
   * Get gender
   * @return gender
  **/
  @Schema(description = "")
  public GenderEnum getGender() {
    return gender;
  }

  public void setGender(GenderEnum gender) {
    this.gender = gender;
  }

  public CustomerPersonDTO active(Boolean active) {
    this.active = active;
    return this;
  }

   /**
   * Get active
   * @return active
  **/
  @Schema(description = "")
  public Boolean isActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }

  public CustomerPersonDTO motherTonguesIds(List<Long> motherTonguesIds) {
    this.motherTonguesIds = motherTonguesIds;
    return this;
  }

  public CustomerPersonDTO addMotherTonguesIdsItem(Long motherTonguesIdsItem) {
    if (this.motherTonguesIds == null) {
      this.motherTonguesIds = new ArrayList<Long>();
    }
    this.motherTonguesIds.add(motherTonguesIdsItem);
    return this;
  }

   /**
   * Get motherTonguesIds
   * @return motherTonguesIds
  **/
  @Schema(description = "")
  public List<Long> getMotherTonguesIds() {
    return motherTonguesIds;
  }

  public void setMotherTonguesIds(List<Long> motherTonguesIds) {
    this.motherTonguesIds = motherTonguesIds;
  }

  public CustomerPersonDTO customFields(List<CustomFieldDTO> customFields) {
    this.customFields = customFields;
    return this;
  }

  public CustomerPersonDTO addCustomFieldsItem(CustomFieldDTO customFieldsItem) {
    if (this.customFields == null) {
      this.customFields = new ArrayList<CustomFieldDTO>();
    }
    this.customFields.add(customFieldsItem);
    return this;
  }

   /**
   * Get customFields
   * @return customFields
  **/
  @Schema(description = "")
  public List<CustomFieldDTO> getCustomFields() {
    return customFields;
  }

  public void setCustomFields(List<CustomFieldDTO> customFields) {
    this.customFields = customFields;
  }

  public CustomerPersonDTO customerId(Long customerId) {
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @Schema(description = "")
  public Long getCustomerId() {
    return customerId;
  }

  public void setCustomerId(Long customerId) {
    this.customerId = customerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerPersonDTO customerPersonDTO = (CustomerPersonDTO) o;
    return Objects.equals(this.id, customerPersonDTO.id) &&
        Objects.equals(this.name, customerPersonDTO.name) &&
        Objects.equals(this.lastName, customerPersonDTO.lastName) &&
        Objects.equals(this.contact, customerPersonDTO.contact) &&
        Objects.equals(this.positionId, customerPersonDTO.positionId) &&
        Objects.equals(this.gender, customerPersonDTO.gender) &&
        Objects.equals(this.active, customerPersonDTO.active) &&
        Objects.equals(this.motherTonguesIds, customerPersonDTO.motherTonguesIds) &&
        Objects.equals(this.customFields, customerPersonDTO.customFields) &&
        Objects.equals(this.customerId, customerPersonDTO.customerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, lastName, contact, positionId, gender, active, motherTonguesIds, customFields, customerId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerPersonDTO {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    positionId: ").append(toIndentedString(positionId)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    motherTonguesIds: ").append(toIndentedString(motherTonguesIds)).append("\n");
    sb.append("    customFields: ").append(toIndentedString(customFields)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
