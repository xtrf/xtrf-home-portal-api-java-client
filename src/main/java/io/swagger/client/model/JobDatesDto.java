/*
 * XTRF Home Portal API
 * XTRF Home Portal API enables you to perform operations on Projects, Quotes, Customers, Vendors etc. as a XTRF Home Portal user. <br>The documentation is generated from OpenAPI specification 3.0 available <a href=\"/home-api/openapi.json\">here</a> <br>   The API client/consumer code may be easily generated in 60+ programming languages using an open source code generator available at the time of writing this documentation at <a href='https://editor.swagger.io/'>https://editor.swagger.io/</a> Thank you for using XTRF Application Programming interface (XTRF API). By using the API you agree to the terms below. If you disagree with any of these terms, XTRF does not grant you a license to use the XTRF API. XTRF reserves the right to update and change these terms from time to time without a prior notice of API users. You can always find the most recent version of these terms here: 
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * JobDatesDto
 */


public class JobDatesDto {
  @SerializedName("startDate")
  private Long startDate = null;

  @SerializedName("deadline")
  private Long deadline = null;

  @SerializedName("actualStartDate")
  private Long actualStartDate = null;

  @SerializedName("actualEndDate")
  private Long actualEndDate = null;

  public JobDatesDto startDate(Long startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @Schema(description = "")
  public Long getStartDate() {
    return startDate;
  }

  public void setStartDate(Long startDate) {
    this.startDate = startDate;
  }

  public JobDatesDto deadline(Long deadline) {
    this.deadline = deadline;
    return this;
  }

   /**
   * Get deadline
   * @return deadline
  **/
  @Schema(description = "")
  public Long getDeadline() {
    return deadline;
  }

  public void setDeadline(Long deadline) {
    this.deadline = deadline;
  }

  public JobDatesDto actualStartDate(Long actualStartDate) {
    this.actualStartDate = actualStartDate;
    return this;
  }

   /**
   * Get actualStartDate
   * @return actualStartDate
  **/
  @Schema(description = "")
  public Long getActualStartDate() {
    return actualStartDate;
  }

  public void setActualStartDate(Long actualStartDate) {
    this.actualStartDate = actualStartDate;
  }

  public JobDatesDto actualEndDate(Long actualEndDate) {
    this.actualEndDate = actualEndDate;
    return this;
  }

   /**
   * Get actualEndDate
   * @return actualEndDate
  **/
  @Schema(description = "")
  public Long getActualEndDate() {
    return actualEndDate;
  }

  public void setActualEndDate(Long actualEndDate) {
    this.actualEndDate = actualEndDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobDatesDto jobDatesDto = (JobDatesDto) o;
    return Objects.equals(this.startDate, jobDatesDto.startDate) &&
        Objects.equals(this.deadline, jobDatesDto.deadline) &&
        Objects.equals(this.actualStartDate, jobDatesDto.actualStartDate) &&
        Objects.equals(this.actualEndDate, jobDatesDto.actualEndDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, deadline, actualStartDate, actualEndDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobDatesDto {\n");
    
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    actualStartDate: ").append(toIndentedString(actualStartDate)).append("\n");
    sb.append("    actualEndDate: ").append(toIndentedString(actualEndDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
